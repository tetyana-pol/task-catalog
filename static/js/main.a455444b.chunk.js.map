{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","onClickModal","selectedTodo","className","map","todo","isSelectedTodo","id","completed","title","type","onClick","cn","TodoFilter","onFilter","onQuery","query","onChange","e","target","value","Object","keys","key","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onSelected","useState","todoLoading","setTodoLoading","todoUser","setTodoUser","useEffect","userId","givenUser","finally","href","email","name","preparedTodos","items","filter","copy","item","All","Active","Completed","toLowerCase","includes","App","loading","setLoading","setTodos","setFilter","setQuery","setSelectedTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a455444b.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onClickModal: (value: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onClickModal,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => {\n          const isSelectedTodo = selectedTodo?.id === todo.id;\n\n          return (\n            <tr data-cy=\"todo\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n\n              {!todo.completed\n                ? (\n                  <td className=\"is-vcentered\" />\n                )\n                : (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )}\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onClickModal(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far',\n                      {\n                        'fa-eye': !isSelectedTodo,\n                        'fa-eye-slash': isSelectedTodo,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })\n      }\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  onFilter: (value: Filter) => void;\n  onQuery: (value: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onFilter, onQuery, query }) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => onFilter(e.target.value as Filter)}\n          >\n            {(Object.keys(Filter) as (keyof typeof Filter)[]).map(key => (\n              <option value={Filter[key]}>{key}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => onQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              onClick={() => onQuery('')}\n              className=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onSelected: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelected }) => {\n  const [todoLoading, setTodoLoading] = useState(true);\n  const [todoUser, setTodoUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then((givenUser) => {\n        setTodoUser(givenUser);\n      })\n      .finally(() => setTodoLoading(false));\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {todoLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelected(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n              {todoUser && (\n                <a href={`mailto:${todoUser.email}`}>\n                  {todoUser.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nimport { getTodos } from './api';\n\nconst preparedTodos = (items: Todo[], filter: Filter, query: string): Todo[] => {\n  let copy = [...items];\n\n  copy = copy.filter(item => {\n    switch (filter) {\n      case Filter.All:\n        return true;\n\n      case Filter.Active:\n        return !item.completed;\n\n      case Filter.Completed:\n        return item.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  if (query) {\n    copy = copy.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return copy;\n};\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilter={setFilter} onQuery={setQuery} query={query} />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={preparedTodos(todos, filter, query)}\n                  onClickModal={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onSelected={setSelectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}